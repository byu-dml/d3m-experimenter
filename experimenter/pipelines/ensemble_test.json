{
	"schema": "https://metadata.datadrivendiscovery.org/schemas/v0/pipeline.json",
	"outputs": [{
		"data": "steps.13.produce",
		"name": "output"
	}],
	"created": "2019-06-21T00:10:50.443061Z",
	"inputs": [{
		"name": "input dataset"
	}],
	"name": "1",
	"digest": "4f8cfc8cbbb2262f33efbfb10ce5bd6956bb40ad182f252e80914eeee48e3812",
	"id": "5ad02445-1f21-41b8-b81c-c025afe6ce68",
	"source": {
		"name": "brown"
	},
	"steps": [{
		"outputs": [{
			"id": "produce"
		}],
		"primitive": {
			"python_path": "d3m.primitives.data_transformation.denormalize.Common",
			"name": "Denormalize datasets",
			"digest": "00ae7955cc0abce2a3ddee96247209f3395009ae6553c7ce8caa577e402754db",
			"id": "f31f8c1f-d1c5-43e5-a4b2-2ae4a761ef2e",
			"version": "0.2.0"
		},
		"arguments": {
			"inputs": {
				"data": "inputs.0",
				"type": "CONTAINER"
			}
		},
		"type": "PRIMITIVE"
	}, {
		"outputs": [{
			"id": "produce"
		}],
		"primitive": {
			"python_path": "d3m.primitives.data_transformation.dataset_to_dataframe.Common",
			"name": "Extract a DataFrame from a Dataset",
			"digest": "0d46a2c5bc374e305682dc4f1c322518c07638153a8365034a513ea46960802b",
			"id": "4b42ce1e-9b98-4a25-b68e-fad13311eb65",
			"version": "0.3.0"
		},
		"arguments": {
			"inputs": {
				"data": "steps.0.produce",
				"type": "CONTAINER"
			}
		},
		"type": "PRIMITIVE"
	}, {
		"outputs": [{
			"id": "produce"
		}],
		"primitive": {
			"python_path": "d3m.primitives.data_transformation.column_parser.DataFrameCommon",
			"name": "Parses strings into their types",
			"digest": "312cacc014497dd674e34765f6eb54430e594c591e760da0383c87844753d2ce",
			"id": "d510cb7a-1782-4f51-b44c-58f0236e47c7",
			"version": "0.5.0"
		},
		"hyperparams": {
			"parse_semantic_types": {
				"data": ["http://schema.org/Integer", "http://schema.org/Float"],
				"type": "VALUE"
			}
		},
		"arguments": {
			"inputs": {
				"data": "steps.1.produce",
				"type": "CONTAINER"
			}
		},
		"type": "PRIMITIVE"
	}, {
		"outputs": [{
			"id": "produce"
		}],
		"primitive": {
			"python_path": "d3m.primitives.data_transformation.extract_columns_by_semantic_types.DataFrameCommon",
			"name": "Extracts columns by semantic type",
			"digest": "297a4943484bcd532650d5727e23b3d11ca702688d7b64dfb5df8bf1282eaa47",
			"id": "4503a4c6-42f7-45a1-a1d4-ed69699cf5e1",
			"version": "0.2.0"
		},
		"hyperparams": {
			"semantic_types": {
				"data": ["https://metadata.datadrivendiscovery.org/types/Attribute"],
				"type": "VALUE"
			}
		},
		"arguments": {
			"inputs": {
				"data": "steps.2.produce",
				"type": "CONTAINER"
			}
		},
		"type": "PRIMITIVE"
	}, {
		"outputs": [{
			"id": "produce"
		}],
		"primitive": {
			"python_path": "d3m.primitives.data_transformation.extract_columns_by_semantic_types.DataFrameCommon",
			"name": "Extracts columns by semantic type",
			"digest": "297a4943484bcd532650d5727e23b3d11ca702688d7b64dfb5df8bf1282eaa47",
			"id": "4503a4c6-42f7-45a1-a1d4-ed69699cf5e1",
			"version": "0.2.0"
		},
		"hyperparams": {
			"semantic_types": {
				"data": ["https://metadata.datadrivendiscovery.org/types/TrueTarget"],
				"type": "VALUE"
			}
		},
		"arguments": {
			"inputs": {
				"data": "steps.2.produce",
				"type": "CONTAINER"
			}
		},
		"type": "PRIMITIVE"
	}, {
		"outputs": [{
			"id": "produce"
		}],
		"primitive": {
			"python_path": "d3m.primitives.data_cleaning.imputer.SKlearn",
			"name": "sklearn.impute.SimpleImputer",
			"digest": "9878fdeb255c5b4fb2beaf053e68b2913e3d7b1c26e40c530c1cb4fe562fde26",
			"id": "d016df89-de62-3c53-87ed-c06bb6a23cde",
			"version": "2019.4.4"
		},
		"hyperparams": {
			"use_semantic_types": {
				"data": true,
				"type": "VALUE"
			},
			"strategy": {
				"data": "mean",
				"type": "VALUE"
			}
		},
		"arguments": {
			"inputs": {
				"data": "steps.3.produce",
				"type": "CONTAINER"
			}
		},
		"type": "PRIMITIVE"
	}, {
		"outputs": [{
			"id": "produce"
		}],
		"primitive": {
			"python_path": "d3m.primitives.data_preprocessing.standard_scaler.SKlearn",
			"name": "sklearn.preprocessing.data.StandardScaler",
			"digest": "4183552e52f20262bfbb3711300a39216d15749d204cc7b475cad55f8dda1cfd",
			"id": "d639947e-ece0-3a39-a666-e974acf4521d",
			"version": "2019.4.4"
		},
		"hyperparams": {
			"use_semantic_types": {
				"data": true,
				"type": "VALUE"
			}
		},
		"arguments": {
			"inputs": {
				"data": "steps.5.produce",
				"type": "CONTAINER"
			}
		},
		"type": "PRIMITIVE"
    }, 
    {
        "arguments": {
            "inputs": {
                "data": "steps.6.produce",
                "type": "CONTAINER"
            },
            "outputs": {
                "data": "steps.4.produce",
                "type": "CONTAINER"
            }
        },
        "hyperparams": {
            "return_result": {
                "data": "replace",
                "type": "VALUE"
            },
            "use_semantic_types": {
                "data": true,
                "type": "VALUE"
            },
			"add_index_columns": {
				"data": true,
				"type": "VALUE"
			}
        },
        "outputs": [
            {
                "id": "produce"
            }
        ],
        "primitive": {
            "digest": "7063cd86933c49ce1fb61513ec320fe7ce9f9d6e9c0cd2149812ecf21c2f9c63",
            "id": "1dd82833-5692-39cb-84fb-2455683075f3",
            "name": "sklearn.ensemble.forest.RandomForestClassifier",
            "python_path": "d3m.primitives.classification.random_forest.SKlearn",
            "version": "v2019.2.27"
        },
        "type": "PRIMITIVE"
    },

    {
        "arguments": {
            "inputs": {
                "data": "steps.6.produce",
                "type": "CONTAINER"
            },
            "outputs": {
                "data": "steps.4.produce",
                "type": "CONTAINER"
            }
        },
        "hyperparams": {
            "return_result": {
                "data": "replace",
                "type": "VALUE"
            },
            "use_semantic_types": {
                "data": true,
                "type": "VALUE"
            },
			"add_index_columns": {
				"data": true,
				"type": "VALUE"
			}
        },
        "outputs": [
            {
                "id": "produce"
            }
        ],
        "primitive": {
            "digest": "7063cd86933c49ce1fb61513ec320fe7ce9f9d6e9c0cd2149812ecf21c2f9c63",
            "id": "1dd82833-5692-39cb-84fb-2455683075f3",
            "name": "sklearn.ensemble.forest.RandomForestClassifier",
            "python_path": "d3m.primitives.classification.random_forest.SKlearn",
            "version": "v2019.2.27"
        },
        "type": "PRIMITIVE"
    },

    {
        "arguments": {
            "inputs": {
                "data": "steps.6.produce",
                "type": "CONTAINER"
            },
            "outputs": {
                "data": "steps.4.produce",
                "type": "CONTAINER"
            }
        },
        "hyperparams": {
            "return_result": {
                "data": "replace",
                "type": "VALUE"
            },
            "use_semantic_types": {
                "data": true,
                "type": "VALUE"
            },
			"add_index_columns": {
				"data": true,
				"type": "VALUE"
			}
        },
        "outputs": [
            {
                "id": "produce"
            }
        ],
        "primitive": {
            "digest": "7063cd86933c49ce1fb61513ec320fe7ce9f9d6e9c0cd2149812ecf21c2f9c63",
            "id": "1dd82833-5692-39cb-84fb-2455683075f3",
            "name": "sklearn.ensemble.forest.RandomForestClassifier",
            "python_path": "d3m.primitives.classification.random_forest.SKlearn",
            "version": "v2019.2.27"
        },
        "type": "PRIMITIVE"
    },
    
    {
		"outputs": [{
			"id": "produce"
		}],
		"primitive": {
			"python_path": "d3m.primitives.data_transformation.horizontal_concat.DataFrameConcat",
			"name": "Concatenate two dataframes",
			"digest": "f14eb9c3a06ae28b52692161da83c055d97fa9ced1367f2639a045b22fa0f528",
			"id": "aff6a77a-faa0-41c5-9595-de2e7f7c4760",
			"version": "0.2.0"
		},
		"arguments": {
			"left": {
				"data": "steps.7.produce",
				"type": "CONTAINER"
			},
			"right": {
				"data": "steps.8.produce",
				"type": "CONTAINER"
			}
		},
		"type": "PRIMITIVE"
    }, 
    {
		"outputs": [{
			"id": "produce"
		}],
		"primitive": {
			"python_path": "d3m.primitives.data_transformation.horizontal_concat.DataFrameConcat",
			"name": "Concatenate two dataframes",
			"digest": "f14eb9c3a06ae28b52692161da83c055d97fa9ced1367f2639a045b22fa0f528",
			"id": "aff6a77a-faa0-41c5-9595-de2e7f7c4760",
			"version": "0.2.0"
		},
		"arguments": {
			"left": {
				"data": "steps.9.produce",
				"type": "CONTAINER"
			},
			"right": {
				"data": "steps.10.produce",
				"type": "CONTAINER"
			}
		},
		"type": "PRIMITIVE"
	},{
		"outputs": [{
			"id": "produce"
		}],
		"primitive": {
			"python_path": "d3m.primitives.classification.random_forest.SKlearn",
			"name": "sklearn.ensemble.forest.RandomForestClassifier",
			"digest": "1e95597335ea675f941f08c916e586a414c0405a2ea0e3da0a0e3b1ee47ba761",
			"id": "1dd82833-5692-39cb-84fb-2455683075f3",
			"version": "2019.4.4"
		},
		"hyperparams": {
			"use_semantic_types": {
				"data": true,
				"type": "VALUE"
			}
		},
		"arguments": {
			"outputs": {
				"data": "steps.4.produce",
				"type": "CONTAINER"
			},
			"inputs": {
				"data": "steps.11.produce",
				"type": "CONTAINER"
			}
		},
		"type": "PRIMITIVE"
	}, {
		"outputs": [{
			"id": "produce"
		}],
		"primitive": {
			"python_path": "d3m.primitives.data_transformation.construct_predictions.DataFrameCommon",
			"name": "Construct pipeline predictions output",
			"digest": "cfb2d595652c4ae0d24e67d4cb8e4916c9f3c2753eaccc2935263d054b3682fa",
			"id": "8d38b340-f83f-4877-baaa-162f8e551736",
			"version": "0.3.0"
		},
		"arguments": {
			"reference": {
				"data": "steps.2.produce",
				"type": "CONTAINER"
			},
			"inputs": {
				"data": "steps.12.produce",
				"type": "CONTAINER"
			}
		},
		"type": "PRIMITIVE"
	}]
}